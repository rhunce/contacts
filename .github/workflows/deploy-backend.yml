name: Deploy Backend

on:
  push:
    branches: [ main, master ]
    paths:
      - 'backend/**'
      - 'infra/lib/backend-stack.ts'
      - 'infra/bin/contacts.ts'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch: # Manual trigger

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    outputs:
      alb-url: ${{ steps.deploy.outputs.alb-url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: infra/package-lock.json

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.CDK_DEFAULT_REGION }}

    - name: Install dependencies
      working-directory: ./infra
      run: npm ci

    - name: CDK Bootstrap
      working-directory: ./infra
      run: npx cdk bootstrap aws://${{ secrets.CDK_DEFAULT_ACCOUNT }}/${{ vars.CDK_DEFAULT_REGION }}
      env:
        CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
        CDK_DEFAULT_REGION: ${{ vars.CDK_DEFAULT_REGION }}
        APP_NAME: ${{ vars.APP_NAME }}
      continue-on-error: true

    - name: Deploy Backend Stack
      id: deploy
      working-directory: ./infra
      run: |
        npx cdk deploy ${APP_NAME}BackendStack --require-approval never
        ALB_URL=$(aws cloudformation describe-stacks --stack-name ${APP_NAME}BackendStack --query 'Stacks[0].Outputs[?OutputKey==`AlbUrl`].OutputValue' --output text)
        echo "alb-url=$ALB_URL" >> $GITHUB_OUTPUT
      env:
        CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
        CDK_DEFAULT_REGION: ${{ vars.CDK_DEFAULT_REGION }}
        APP_NAME: ${{ vars.APP_NAME }}
        NODE_ENV: ${{ vars.NODE_ENV }}

    - name: Output ALB URL
      run: |
        echo "Backend deployed successfully!"
        echo "ALB URL: ${{ steps.deploy.outputs.alb-url }}"
